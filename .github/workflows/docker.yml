name: Build Docker image

on:
  push:
    branches: main

env:
  PLATFORMS: |
    [
      "linux/386",
      "linux/amd64",
      "linux/arm/v6",
      "linux/arm/v7",
      "linux/arm64",
      "linux/ppc64le",
      "linux/s390x"
    ]
  CACHE_BASE_PATH: '/tmp/.buildx'

jobs:
  get-platforms:
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.generate-platforms.outputs.platforms }}
    steps:
      -
        name: Generate platforms
        id: generate-platforms
        run: |
          echo "::set-output name=platforms::${PLATFORMS//$'\n'/'%0A'}"

  build:
    needs: get-platforms
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: ${{ fromJSON(needs.get-platforms.outputs.platforms) }}
    outputs:
      artifact: ${{ steps.names.outputs.artifact }}
      cache-path: ${{ steps.names.outputs.cache-path }}
    steps:
      -
        name: Generate names
        id: names
        env:
          platform: ${{ matrix.platform }}
        run: |
          platform="${platform////-}"
          artifact="cache-$platform"
          echo "::set-output name=platform::$platform"
          echo "::set-output name=artifact::$artifact"
          echo "::set-output name=cache-path::$CACHE_BASE_PATH/$artifact"
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ matrix.platform }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Build image
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ matrix.platform }}
          cache-to: type=local,dest=${{ steps.names.outputs.cache-path }},mode=max
      -
        name: Upload cache
        uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.names.outputs.artifact }}
          path: ${{ steps.names.outputs.cache-path }}

  publish:
    needs: [get-platforms, build]
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: ${{ join(fromJSON(needs.get-platforms.outputs.platforms), ',') }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Download caches
        uses: actions/download-artifact@v2
        with:
          path: ${{ env.CACHE_BASE_PATH }}
      -
        name: Generate caches
        id: caches
        run: |
          caches=$(find "$CACHE_BASE_PATH" -mindepth 1 -maxdepth 1 -type d -printf '"type=local,src=%p\n"')
          echo "::set-output name=caches::${caches//$'\n'/'%0A'}"
      -
        name: Build image
        uses: docker/build-push-action@v2
        with:
          platforms: ${{ join(fromJSON(needs.get-platforms.outputs.platforms), ',') }}
          cache-from: ${{ steps.caches.outputs.caches }}
          push: true
          tags: alnmawi/python2:latest
